# Specify the package name for generated Java classes
package org.prismatic.kotlinangle;

# Include OpenGL header files (these paths need to be adjusted based on your environment)
import <GL/gl.h>;
import <GL/glu.h>;
import <GL/glext.h>;  # For OpenGL extensions

# Optionally, include OpenGL ES headers if needed
import <GLES2/gl2.h>;
import <GLES3/gl3.h>;

# Import the necessary standard headers for types and macros
import <stdlib.h>;
import <stdio.h>;
import <string.h>;

# Ignore functions that are unnecessary or will be handled manually
ignore 'glXGetProcAddress';  # Example, specific to X11 on Linux
ignore 'wglGetProcAddress';  # Example, specific to Windows
ignore 'glfwInit';           # Example, if using GLFW

# Automatically map all functions and types
allStructsAndEnums;
allFunctions;

# Special case mappings or custom handlers can be defined here
# For example, handling callback functions or specific types differently
JavaCallbackFunction glDebugMessageCallbackARB(GLDEBUGPROCARB callback) {
    return glDebugMessageCallbackARBImpl;
}

# Specify how to handle certain macros, constants, or enums
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;

# Mapping of constants and enums to Java
constant GLenum GL_TEXTURE_2D;
constant GLbitfield GL_COLOR_BUFFER_BIT;

# Handle special cases for specific platforms (e.g., Windows, macOS)
platform windows {
    import <windows.h>;
  